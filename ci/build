#!/bin/bash -e

export WORKSPACE=${WORKSPACE:-$(pwd)}
export PATH="$PATH:$WORKSPACE/bin"

git clean -ffdx

source /usr/local/rvm/scripts/rvm
rvm use 2.5.1

set -x

# From https://github.com/fossas/fossa-cli
fossa_install_script=https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh
target_binary_directory="$WORKSPACE/bin"
temporary_directory="$WORKSPACE/tmp"
repo_list="$WORKSPACE/ci/repo_list"
failures=0
failed_repos_list="$temporary_directory/failed_repos"

function configure_lein() {
  lein_version=${1:-2.9.1}

  if [[ -n $lein_version && -x /usr/local/bin/lein-$lein_version ]]; then
    export LEIN=/usr/local/bin/lein-$lein_version
    return
  fi

  : === Info: Installing leiningen version $lein_version
  lein_source_url=https://raw.githubusercontent.com/technomancy/leiningen/$lein_version/bin/lein
  lein_script_path=$target_binary_directory/lein
  mkdir --parents $target_binary_directory
  curl --fail --insecure --location --output $lein_script_path \
       https://raw.githubusercontent.com/technomancy/leiningen/$lein_version/bin/lein

  if [[ ! -r $lein_script_path ]]; then
    : === Error: lein curl $lein_source_url failed.
    exit 1
  fi

  chmod 755 $lein_script_path
  export LEIN=$lein_script_path
}


mkdir --parents "$target_binary_directory"
mkdir --parents "$temporary_directory"

curl -H 'Cache-Control: no-cache' $fossa_install_script > $target_binary_directory/install.sh
/bin/bash $target_binary_directory/install.sh -b $target_binary_directory

hash -r


for repo_url in $(cat $repo_list); do
  : ===
  : === Info: Analyzing $repo_url
  : ===
  repo_directory="$WORKSPACE/$(basename $repo_url .git)"
  git clone --recursive $repo_url $repo_directory
  builtin cd $repo_directory

  if [[ -r project.clj ]]; then
    configure_lein
  fi

  if [[ -r Gemfile ]]; then
    export BUNDLE_PATH="$repo_directory/bundle/gems"
    export BUNDLE_BIN="$repo_directory/bundle/bin"

    mkdir --parents "$BUNDLE_PATH"
    mkdir --parents "$BUNDLE_BIN"

    bundle install
  fi
  set +e
  fossa init
  fossa analyze
  # fossa test
  if [[ $? != 0 ]]; then
     : ===
     : === Warning: FOSSA found issues analyzing $repo_url
     : ===
  fi
  set -e
  builtin cd $WORKSPACE
done

set +x
if [[ $failures != 0 ]]; then
  echo "=== Info: $failures failures found. Failed repos are:"
  cat $failed_repos_list
fi

